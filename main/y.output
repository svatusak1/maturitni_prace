Terminals unused in grammar

    REMLIST
    ADDLIST
    LBRACK
    RBRACK
    LISTTYPE


Grammar

    0 $accept: st $end

    1 st: START_OF_FILE program

    2 program: statement program
    3        | statement

    4 statement: declarations
    5          | expression
    6          | flow_control
    7          | change_val
    8          | comment

    9 declarations: func_dec
   10             | variable_dec

   11 comment: COMMENT
   12        | MULTICOMMENT

   13 change_val: IDENT ASSIGN expression

   14 func_dec: DEF arg_func_type IDENT LPAREN function_inp RPAREN LCURL function_block RCURL

   15 function_inp: arg_func
   16             | arg_func COMMA function_inp
   17             | %empty

   18 arg_func: arg_func_datatype IDENT

   19 arg_func_type: BYTE
   20              | INT
   21              | STR
   22              | VOIDTYPE

   23 arg_func_datatype: BYTE
   24                  | INT
   25                  | STRTYPE

   26 function_block: function_line
   27               | function_block function_line

   28 function_line: statement
   29              | return

   30 return: RTRN expression

   31 expression: expression PLUS expression
   32           | expression MINUS expression
   33           | expression TIMES expression
   34           | expression DIVIDE expression
   35           | LPAREN expression RPAREN
   36           | value

   37 value: IDENT
   38      | NUMBER
   39      | STR
   40      | function_call

   41 function_call: CALL IDENT LPAREN arg_val RPAREN
   42              | CALL CAPACITY LPAREN arg_val RPAREN
   43              | CALL LEN LPAREN arg_val RPAREN

   44 arg_val: expression
   45        | arg_val COMMA expression
   46        | %empty

   47 variable_dec: datatype IDENT ASSIGN expression

   48 datatype: BYTE
   49         | INT
   50         | STRTYPE

   51 flow_control: LOOP LPAREN datatype IDENT SEMICOL range RPAREN block
   52             | IF LPAREN condition RPAREN block

   53 range: expression TO expression
   54      | expression TO expression SEMICOL step

   55 step: expression

   56 condition: expression comp expression

   57 comp: EQL
   58     | NEQ
   59     | LSS
   60     | GTR
   61     | LEQ
   62     | GEQ

   63 block: LCURL program RCURL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER (258) 38
    STR (259) 21 39
    IDENT (260) 13 14 18 37 41 47 51
    START_OF_FILE (261) 1
    REMLIST (262)
    ADDLIST (263)
    PLUS (264) 31
    MINUS (265) 32
    TIMES (266) 33
    DIVIDE (267) 34
    RCURL (268) 14 63
    SEMICOL (269) 51 54
    COMMA (270) 16 45
    EQL (271) 57
    NEQ (272) 58
    LSS (273) 59
    GTR (274) 60
    LEQ (275) 61
    GEQ (276) 62
    CALL (277) 41 42 43
    DEF (278) 14
    RTRN (279) 30
    LOOP (280) 51
    TO (281) 53 54
    IF (282) 52
    BYTE (283) 19 23 48
    INT (284) 20 24 49
    STRTYPE (285) 25 50
    LPAREN (286) 14 35 41 42 43 51 52
    RPAREN (287) 14 35 41 42 43 51 52
    LBRACK (288)
    RBRACK (289)
    LCURL (290) 14 63
    LISTTYPE (291)
    VOIDTYPE (292) 22
    ASSIGN (293) 13 47
    CAPACITY (294) 42
    LEN (295) 43
    COMMENT (296) 11
    MULTICOMMENT (297) 12


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    st (44)
        on left: 1
        on right: 0
    program (45)
        on left: 2 3
        on right: 1 2 63
    statement (46)
        on left: 4 5 6 7 8
        on right: 2 3 28
    declarations (47)
        on left: 9 10
        on right: 4
    comment (48)
        on left: 11 12
        on right: 8
    change_val (49)
        on left: 13
        on right: 7
    func_dec (50)
        on left: 14
        on right: 9
    function_inp (51)
        on left: 15 16 17
        on right: 14 16
    arg_func (52)
        on left: 18
        on right: 15 16
    arg_func_type (53)
        on left: 19 20 21 22
        on right: 14
    arg_func_datatype (54)
        on left: 23 24 25
        on right: 18
    function_block (55)
        on left: 26 27
        on right: 14 27
    function_line (56)
        on left: 28 29
        on right: 26 27
    return (57)
        on left: 30
        on right: 29
    expression (58)
        on left: 31 32 33 34 35 36
        on right: 5 13 30 31 32 33 34 35 44 45 47 53 54 55 56
    value (59)
        on left: 37 38 39 40
        on right: 36
    function_call (60)
        on left: 41 42 43
        on right: 40
    arg_val (61)
        on left: 44 45 46
        on right: 41 42 43 45
    variable_dec (62)
        on left: 47
        on right: 10
    datatype (63)
        on left: 48 49 50
        on right: 47 51
    flow_control (64)
        on left: 51 52
        on right: 6
    range (65)
        on left: 53 54
        on right: 51
    step (66)
        on left: 55
        on right: 54
    condition (67)
        on left: 56
        on right: 52
    comp (68)
        on left: 57 58 59 60 61 62
        on right: 56
    block (69)
        on left: 63
        on right: 51 52


State 0

    0 $accept: . st $end

    START_OF_FILE  shift, and go to state 1

    st  go to state 2


State 1

    1 st: START_OF_FILE . program

    NUMBER        shift, and go to state 3
    STR           shift, and go to state 4
    IDENT         shift, and go to state 5
    CALL          shift, and go to state 6
    DEF           shift, and go to state 7
    LOOP          shift, and go to state 8
    IF            shift, and go to state 9
    BYTE          shift, and go to state 10
    INT           shift, and go to state 11
    STRTYPE       shift, and go to state 12
    LPAREN        shift, and go to state 13
    COMMENT       shift, and go to state 14
    MULTICOMMENT  shift, and go to state 15

    program        go to state 16
    statement      go to state 17
    declarations   go to state 18
    comment        go to state 19
    change_val     go to state 20
    func_dec       go to state 21
    expression     go to state 22
    value          go to state 23
    function_call  go to state 24
    variable_dec   go to state 25
    datatype       go to state 26
    flow_control   go to state 27


State 2

    0 $accept: st . $end

    $end  shift, and go to state 28


State 3

   38 value: NUMBER .

    $default  reduce using rule 38 (value)


State 4

   39 value: STR .

    $default  reduce using rule 39 (value)


State 5

   13 change_val: IDENT . ASSIGN expression
   37 value: IDENT .

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 37 (value)


State 6

   41 function_call: CALL . IDENT LPAREN arg_val RPAREN
   42              | CALL . CAPACITY LPAREN arg_val RPAREN
   43              | CALL . LEN LPAREN arg_val RPAREN

    IDENT     shift, and go to state 30
    CAPACITY  shift, and go to state 31
    LEN       shift, and go to state 32


State 7

   14 func_dec: DEF . arg_func_type IDENT LPAREN function_inp RPAREN LCURL function_block RCURL

    STR       shift, and go to state 33
    BYTE      shift, and go to state 34
    INT       shift, and go to state 35
    VOIDTYPE  shift, and go to state 36

    arg_func_type  go to state 37


State 8

   51 flow_control: LOOP . LPAREN datatype IDENT SEMICOL range RPAREN block

    LPAREN  shift, and go to state 38


State 9

   52 flow_control: IF . LPAREN condition RPAREN block

    LPAREN  shift, and go to state 39


State 10

   48 datatype: BYTE .

    $default  reduce using rule 48 (datatype)


State 11

   49 datatype: INT .

    $default  reduce using rule 49 (datatype)


State 12

   50 datatype: STRTYPE .

    $default  reduce using rule 50 (datatype)


State 13

   35 expression: LPAREN . expression RPAREN

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 41
    value          go to state 23
    function_call  go to state 24


State 14

   11 comment: COMMENT .

    $default  reduce using rule 11 (comment)


State 15

   12 comment: MULTICOMMENT .

    $default  reduce using rule 12 (comment)


State 16

    1 st: START_OF_FILE program .

    $default  reduce using rule 1 (st)


State 17

    2 program: statement . program
    3        | statement .

    NUMBER        shift, and go to state 3
    STR           shift, and go to state 4
    IDENT         shift, and go to state 5
    CALL          shift, and go to state 6
    DEF           shift, and go to state 7
    LOOP          shift, and go to state 8
    IF            shift, and go to state 9
    BYTE          shift, and go to state 10
    INT           shift, and go to state 11
    STRTYPE       shift, and go to state 12
    LPAREN        shift, and go to state 13
    COMMENT       shift, and go to state 14
    MULTICOMMENT  shift, and go to state 15

    $default  reduce using rule 3 (program)

    program        go to state 42
    statement      go to state 17
    declarations   go to state 18
    comment        go to state 19
    change_val     go to state 20
    func_dec       go to state 21
    expression     go to state 22
    value          go to state 23
    function_call  go to state 24
    variable_dec   go to state 25
    datatype       go to state 26
    flow_control   go to state 27


State 18

    4 statement: declarations .

    $default  reduce using rule 4 (statement)


State 19

    8 statement: comment .

    $default  reduce using rule 8 (statement)


State 20

    7 statement: change_val .

    $default  reduce using rule 7 (statement)


State 21

    9 declarations: func_dec .

    $default  reduce using rule 9 (declarations)


State 22

    5 statement: expression .
   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 5 (statement)


State 23

   36 expression: value .

    $default  reduce using rule 36 (expression)


State 24

   40 value: function_call .

    $default  reduce using rule 40 (value)


State 25

   10 declarations: variable_dec .

    $default  reduce using rule 10 (declarations)


State 26

   47 variable_dec: datatype . IDENT ASSIGN expression

    IDENT  shift, and go to state 47


State 27

    6 statement: flow_control .

    $default  reduce using rule 6 (statement)


State 28

    0 $accept: st $end .

    $default  accept


State 29

   13 change_val: IDENT ASSIGN . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 48
    value          go to state 23
    function_call  go to state 24


State 30

   41 function_call: CALL IDENT . LPAREN arg_val RPAREN

    LPAREN  shift, and go to state 49


State 31

   42 function_call: CALL CAPACITY . LPAREN arg_val RPAREN

    LPAREN  shift, and go to state 50


State 32

   43 function_call: CALL LEN . LPAREN arg_val RPAREN

    LPAREN  shift, and go to state 51


State 33

   21 arg_func_type: STR .

    $default  reduce using rule 21 (arg_func_type)


State 34

   19 arg_func_type: BYTE .

    $default  reduce using rule 19 (arg_func_type)


State 35

   20 arg_func_type: INT .

    $default  reduce using rule 20 (arg_func_type)


State 36

   22 arg_func_type: VOIDTYPE .

    $default  reduce using rule 22 (arg_func_type)


State 37

   14 func_dec: DEF arg_func_type . IDENT LPAREN function_inp RPAREN LCURL function_block RCURL

    IDENT  shift, and go to state 52


State 38

   51 flow_control: LOOP LPAREN . datatype IDENT SEMICOL range RPAREN block

    BYTE     shift, and go to state 10
    INT      shift, and go to state 11
    STRTYPE  shift, and go to state 12

    datatype  go to state 53


State 39

   52 flow_control: IF LPAREN . condition RPAREN block

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 54
    value          go to state 23
    function_call  go to state 24
    condition      go to state 55


State 40

   37 value: IDENT .

    $default  reduce using rule 37 (value)


State 41

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   35           | LPAREN expression . RPAREN

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    RPAREN  shift, and go to state 56


State 42

    2 program: statement program .

    $default  reduce using rule 2 (program)


State 43

   31 expression: expression PLUS . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 57
    value          go to state 23
    function_call  go to state 24


State 44

   32 expression: expression MINUS . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 58
    value          go to state 23
    function_call  go to state 24


State 45

   33 expression: expression TIMES . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 59
    value          go to state 23
    function_call  go to state 24


State 46

   34 expression: expression DIVIDE . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 60
    value          go to state 23
    function_call  go to state 24


State 47

   47 variable_dec: datatype IDENT . ASSIGN expression

    ASSIGN  shift, and go to state 61


State 48

   13 change_val: IDENT ASSIGN expression .
   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 13 (change_val)


State 49

   41 function_call: CALL IDENT LPAREN . arg_val RPAREN

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    $default  reduce using rule 46 (arg_val)

    expression     go to state 62
    value          go to state 23
    function_call  go to state 24
    arg_val        go to state 63


State 50

   42 function_call: CALL CAPACITY LPAREN . arg_val RPAREN

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    $default  reduce using rule 46 (arg_val)

    expression     go to state 62
    value          go to state 23
    function_call  go to state 24
    arg_val        go to state 64


State 51

   43 function_call: CALL LEN LPAREN . arg_val RPAREN

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    $default  reduce using rule 46 (arg_val)

    expression     go to state 62
    value          go to state 23
    function_call  go to state 24
    arg_val        go to state 65


State 52

   14 func_dec: DEF arg_func_type IDENT . LPAREN function_inp RPAREN LCURL function_block RCURL

    LPAREN  shift, and go to state 66


State 53

   51 flow_control: LOOP LPAREN datatype . IDENT SEMICOL range RPAREN block

    IDENT  shift, and go to state 67


State 54

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   56 condition: expression . comp expression

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQL     shift, and go to state 68
    NEQ     shift, and go to state 69
    LSS     shift, and go to state 70
    GTR     shift, and go to state 71
    LEQ     shift, and go to state 72
    GEQ     shift, and go to state 73

    comp  go to state 74


State 55

   52 flow_control: IF LPAREN condition . RPAREN block

    RPAREN  shift, and go to state 75


State 56

   35 expression: LPAREN expression RPAREN .

    $default  reduce using rule 35 (expression)


State 57

   31 expression: expression . PLUS expression
   31           | expression PLUS expression .
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression

    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 31 (expression)


State 58

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   32           | expression MINUS expression .
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression

    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 32 (expression)


State 59

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   33           | expression TIMES expression .
   34           | expression . DIVIDE expression

    $default  reduce using rule 33 (expression)


State 60

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   34           | expression DIVIDE expression .

    $default  reduce using rule 34 (expression)


State 61

   47 variable_dec: datatype IDENT ASSIGN . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 76
    value          go to state 23
    function_call  go to state 24


State 62

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   44 arg_val: expression .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 44 (arg_val)


State 63

   41 function_call: CALL IDENT LPAREN arg_val . RPAREN
   45 arg_val: arg_val . COMMA expression

    COMMA   shift, and go to state 77
    RPAREN  shift, and go to state 78


State 64

   42 function_call: CALL CAPACITY LPAREN arg_val . RPAREN
   45 arg_val: arg_val . COMMA expression

    COMMA   shift, and go to state 77
    RPAREN  shift, and go to state 79


State 65

   43 function_call: CALL LEN LPAREN arg_val . RPAREN
   45 arg_val: arg_val . COMMA expression

    COMMA   shift, and go to state 77
    RPAREN  shift, and go to state 80


State 66

   14 func_dec: DEF arg_func_type IDENT LPAREN . function_inp RPAREN LCURL function_block RCURL

    BYTE     shift, and go to state 81
    INT      shift, and go to state 82
    STRTYPE  shift, and go to state 83

    $default  reduce using rule 17 (function_inp)

    function_inp       go to state 84
    arg_func           go to state 85
    arg_func_datatype  go to state 86


State 67

   51 flow_control: LOOP LPAREN datatype IDENT . SEMICOL range RPAREN block

    SEMICOL  shift, and go to state 87


State 68

   57 comp: EQL .

    $default  reduce using rule 57 (comp)


State 69

   58 comp: NEQ .

    $default  reduce using rule 58 (comp)


State 70

   59 comp: LSS .

    $default  reduce using rule 59 (comp)


State 71

   60 comp: GTR .

    $default  reduce using rule 60 (comp)


State 72

   61 comp: LEQ .

    $default  reduce using rule 61 (comp)


State 73

   62 comp: GEQ .

    $default  reduce using rule 62 (comp)


State 74

   56 condition: expression comp . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 88
    value          go to state 23
    function_call  go to state 24


State 75

   52 flow_control: IF LPAREN condition RPAREN . block

    LCURL  shift, and go to state 89

    block  go to state 90


State 76

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   47 variable_dec: datatype IDENT ASSIGN expression .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 47 (variable_dec)


State 77

   45 arg_val: arg_val COMMA . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 91
    value          go to state 23
    function_call  go to state 24


State 78

   41 function_call: CALL IDENT LPAREN arg_val RPAREN .

    $default  reduce using rule 41 (function_call)


State 79

   42 function_call: CALL CAPACITY LPAREN arg_val RPAREN .

    $default  reduce using rule 42 (function_call)


State 80

   43 function_call: CALL LEN LPAREN arg_val RPAREN .

    $default  reduce using rule 43 (function_call)


State 81

   23 arg_func_datatype: BYTE .

    $default  reduce using rule 23 (arg_func_datatype)


State 82

   24 arg_func_datatype: INT .

    $default  reduce using rule 24 (arg_func_datatype)


State 83

   25 arg_func_datatype: STRTYPE .

    $default  reduce using rule 25 (arg_func_datatype)


State 84

   14 func_dec: DEF arg_func_type IDENT LPAREN function_inp . RPAREN LCURL function_block RCURL

    RPAREN  shift, and go to state 92


State 85

   15 function_inp: arg_func .
   16             | arg_func . COMMA function_inp

    COMMA  shift, and go to state 93

    $default  reduce using rule 15 (function_inp)


State 86

   18 arg_func: arg_func_datatype . IDENT

    IDENT  shift, and go to state 94


State 87

   51 flow_control: LOOP LPAREN datatype IDENT SEMICOL . range RPAREN block

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 95
    value          go to state 23
    function_call  go to state 24
    range          go to state 96


State 88

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   56 condition: expression comp expression .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 56 (condition)


State 89

   63 block: LCURL . program RCURL

    NUMBER        shift, and go to state 3
    STR           shift, and go to state 4
    IDENT         shift, and go to state 5
    CALL          shift, and go to state 6
    DEF           shift, and go to state 7
    LOOP          shift, and go to state 8
    IF            shift, and go to state 9
    BYTE          shift, and go to state 10
    INT           shift, and go to state 11
    STRTYPE       shift, and go to state 12
    LPAREN        shift, and go to state 13
    COMMENT       shift, and go to state 14
    MULTICOMMENT  shift, and go to state 15

    program        go to state 97
    statement      go to state 17
    declarations   go to state 18
    comment        go to state 19
    change_val     go to state 20
    func_dec       go to state 21
    expression     go to state 22
    value          go to state 23
    function_call  go to state 24
    variable_dec   go to state 25
    datatype       go to state 26
    flow_control   go to state 27


State 90

   52 flow_control: IF LPAREN condition RPAREN block .

    $default  reduce using rule 52 (flow_control)


State 91

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   45 arg_val: arg_val COMMA expression .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 45 (arg_val)


State 92

   14 func_dec: DEF arg_func_type IDENT LPAREN function_inp RPAREN . LCURL function_block RCURL

    LCURL  shift, and go to state 98


State 93

   16 function_inp: arg_func COMMA . function_inp

    BYTE     shift, and go to state 81
    INT      shift, and go to state 82
    STRTYPE  shift, and go to state 83

    $default  reduce using rule 17 (function_inp)

    function_inp       go to state 99
    arg_func           go to state 85
    arg_func_datatype  go to state 86


State 94

   18 arg_func: arg_func_datatype IDENT .

    $default  reduce using rule 18 (arg_func)


State 95

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   53 range: expression . TO expression
   54      | expression . TO expression SEMICOL step

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    TO      shift, and go to state 100


State 96

   51 flow_control: LOOP LPAREN datatype IDENT SEMICOL range . RPAREN block

    RPAREN  shift, and go to state 101


State 97

   63 block: LCURL program . RCURL

    RCURL  shift, and go to state 102


State 98

   14 func_dec: DEF arg_func_type IDENT LPAREN function_inp RPAREN LCURL . function_block RCURL

    NUMBER        shift, and go to state 3
    STR           shift, and go to state 4
    IDENT         shift, and go to state 5
    CALL          shift, and go to state 6
    DEF           shift, and go to state 7
    RTRN          shift, and go to state 103
    LOOP          shift, and go to state 8
    IF            shift, and go to state 9
    BYTE          shift, and go to state 10
    INT           shift, and go to state 11
    STRTYPE       shift, and go to state 12
    LPAREN        shift, and go to state 13
    COMMENT       shift, and go to state 14
    MULTICOMMENT  shift, and go to state 15

    statement       go to state 104
    declarations    go to state 18
    comment         go to state 19
    change_val      go to state 20
    func_dec        go to state 21
    function_block  go to state 105
    function_line   go to state 106
    return          go to state 107
    expression      go to state 22
    value           go to state 23
    function_call   go to state 24
    variable_dec    go to state 25
    datatype        go to state 26
    flow_control    go to state 27


State 99

   16 function_inp: arg_func COMMA function_inp .

    $default  reduce using rule 16 (function_inp)


State 100

   53 range: expression TO . expression
   54      | expression TO . expression SEMICOL step

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 108
    value          go to state 23
    function_call  go to state 24


State 101

   51 flow_control: LOOP LPAREN datatype IDENT SEMICOL range RPAREN . block

    LCURL  shift, and go to state 89

    block  go to state 109


State 102

   63 block: LCURL program RCURL .

    $default  reduce using rule 63 (block)


State 103

   30 return: RTRN . expression

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 110
    value          go to state 23
    function_call  go to state 24


State 104

   28 function_line: statement .

    $default  reduce using rule 28 (function_line)


State 105

   14 func_dec: DEF arg_func_type IDENT LPAREN function_inp RPAREN LCURL function_block . RCURL
   27 function_block: function_block . function_line

    NUMBER        shift, and go to state 3
    STR           shift, and go to state 4
    IDENT         shift, and go to state 5
    RCURL         shift, and go to state 111
    CALL          shift, and go to state 6
    DEF           shift, and go to state 7
    RTRN          shift, and go to state 103
    LOOP          shift, and go to state 8
    IF            shift, and go to state 9
    BYTE          shift, and go to state 10
    INT           shift, and go to state 11
    STRTYPE       shift, and go to state 12
    LPAREN        shift, and go to state 13
    COMMENT       shift, and go to state 14
    MULTICOMMENT  shift, and go to state 15

    statement      go to state 104
    declarations   go to state 18
    comment        go to state 19
    change_val     go to state 20
    func_dec       go to state 21
    function_line  go to state 112
    return         go to state 107
    expression     go to state 22
    value          go to state 23
    function_call  go to state 24
    variable_dec   go to state 25
    datatype       go to state 26
    flow_control   go to state 27


State 106

   26 function_block: function_line .

    $default  reduce using rule 26 (function_block)


State 107

   29 function_line: return .

    $default  reduce using rule 29 (function_line)


State 108

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   53 range: expression TO expression .
   54      | expression TO expression . SEMICOL step

    PLUS     shift, and go to state 43
    MINUS    shift, and go to state 44
    TIMES    shift, and go to state 45
    DIVIDE   shift, and go to state 46
    SEMICOL  shift, and go to state 113

    $default  reduce using rule 53 (range)


State 109

   51 flow_control: LOOP LPAREN datatype IDENT SEMICOL range RPAREN block .

    $default  reduce using rule 51 (flow_control)


State 110

   30 return: RTRN expression .
   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 30 (return)


State 111

   14 func_dec: DEF arg_func_type IDENT LPAREN function_inp RPAREN LCURL function_block RCURL .

    $default  reduce using rule 14 (func_dec)


State 112

   27 function_block: function_block function_line .

    $default  reduce using rule 27 (function_block)


State 113

   54 range: expression TO expression SEMICOL . step

    NUMBER  shift, and go to state 3
    STR     shift, and go to state 4
    IDENT   shift, and go to state 40
    CALL    shift, and go to state 6
    LPAREN  shift, and go to state 13

    expression     go to state 114
    value          go to state 23
    function_call  go to state 24
    step           go to state 115


State 114

   31 expression: expression . PLUS expression
   32           | expression . MINUS expression
   33           | expression . TIMES expression
   34           | expression . DIVIDE expression
   55 step: expression .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 55 (step)


State 115

   54 range: expression TO expression SEMICOL step .

    $default  reduce using rule 54 (range)
